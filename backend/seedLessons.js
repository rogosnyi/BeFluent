const mongoose = require("mongoose");
const Lesson = require("./models/Lesson");
require("dotenv").config();

const sampleLessons = [
  {
    id: "A1-lesson-1",
    level: "A1",
    title: "–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ",
    titleEn: "Greetings and Introductions",
    content: `
# Greetings and Introductions

In this lesson, you'll learn basic English greetings and how to introduce yourself.

## Common Greetings:
- **Hello** - –ü—Ä–∏–≤—ñ—Ç (formal and informal)
- **Hi** - –ü—Ä–∏–≤—ñ—Ç (informal)
- **Good morning** - –î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É
- **Good afternoon** - –î–æ–±—Ä–æ–≥–æ –¥–Ω—è
- **Good evening** - –î–æ–±—Ä–æ–≥–æ –≤–µ—á–æ—Ä–∞
- **Goodbye** - –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è
- **Bye** - –ë—É–≤–∞–π

## Introducing Yourself:
- **My name is...** - –ú–µ–Ω–µ –∑–≤–∞—Ç–∏...
- **I am from Ukraine** - –Ø –∑ –£–∫—Ä–∞—ó–Ω–∏
- **Nice to meet you** - –ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è
- **How are you?** - –Ø–∫ —Å–ø—Ä–∞–≤–∏?
- **I'm fine, thank you** - –Ø –¥–æ–±—Ä–µ, –¥—è–∫—É—é

## Example Dialogue:
**Person A:** Hello! My name is Anna. What's your name?
**Person B:** Hi Anna! I'm Oleg. Nice to meet you.
**Person A:** Nice to meet you too, Oleg. How are you?
**Person B:** I'm fine, thank you. And you?
**Person A:** I'm great! Where are you from?
**Person B:** I'm from Kyiv, Ukraine.
    `,
    vocabulary: [
      { en: "Hello", ua: "–ü—Ä–∏–≤—ñ—Ç", example: "Hello! How are you?" },
      {
        en: "Goodbye",
        ua: "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è",
        example: "Goodbye! See you tomorrow.",
      },
      { en: "My name is", ua: "–ú–µ–Ω–µ –∑–≤–∞—Ç–∏", example: "My name is Anna." },
      {
        en: "Nice to meet you",
        ua: "–ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è",
        example: "Nice to meet you!",
      },
      { en: "How are you?", ua: "–Ø–∫ —Å–ø—Ä–∞–≤–∏?", example: "Hello! How are you?" },
      { en: "I am fine", ua: "–Ø –¥–æ–±—Ä–µ", example: "I am fine, thank you." },
      { en: "Thank you", ua: "–î—è–∫—É—é", example: "Thank you very much!" },
      {
        en: "Where are you from?",
        ua: "–ó–≤—ñ–¥–∫–∏ —Ç–∏?",
        example: "Where are you from?",
      },
    ],
    quiz: [
      {
        type: "multiple-choice",
        question: '–Ø–∫ —Å–∫–∞–∑–∞—Ç–∏ "–ü—Ä–∏–≤—ñ—Ç" –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é?',
        options: ["Hello", "Goodbye", "Thank you", "Please"],
        correct: 0,
      },
      {
        type: "multiple-choice",
        question: '–©–æ –æ–∑–Ω–∞—á–∞—î "Nice to meet you"?',
        options: [
          "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è",
          "–ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è",
          "–Ø–∫ —Å–ø—Ä–∞–≤–∏?",
          "–î—è–∫—É—é",
        ],
        correct: 1,
      },
      {
        type: "translation",
        question: '–ü–µ—Ä–µ–∫–ª–∞–¥—ñ—Ç—å: "–ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –û–ª–µ–≥"',
        options: [
          "My name is Oleg",
          "I am Oleg",
          "Hello Oleg",
          "Oleg is my name",
        ],
        correct: 0,
      },
      {
        type: "fill-blank",
        question: '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø—Ä–æ–ø—É—Å–∫: "How ___ you?"',
        correctAnswer: "are",
      },
      {
        type: "multiple-choice",
        question: '–Ø–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ "How are you?"',
        options: [
          "I am fine, thank you",
          "My name is Anna",
          "Goodbye",
          "Hello",
        ],
        correct: 0,
      },
      {
        type: "translation",
        question: '–ü–µ—Ä–µ–∫–ª–∞–¥—ñ—Ç—å: "–Ø –∑ –£–∫—Ä–∞—ó–Ω–∏"',
        options: [
          "I am from Ukraine",
          "I live in Ukraine",
          "Ukraine is my home",
          "I like Ukraine",
        ],
        correct: 0,
      },
      {
        type: "fill-blank",
        question: '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å: "Good ___" (—Ä–∞–Ω–æ–∫)',
        correctAnswer: "morning",
      },
      {
        type: "multiple-choice",
        question: '–©–æ –æ–∑–Ω–∞—á–∞—î "Goodbye"?',
        options: ["–ü—Ä–∏–≤—ñ—Ç", "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è", "–î—è–∫—É—é", "–ë—É–¥—å –ª–∞—Å–∫–∞"],
        correct: 1,
      },
    ],
    order: 1,
  },
  {
    id: "A1-lesson-2",
    level: "A1",
    title: "–ß–∏—Å–ª–∞ —Ç–∞ –≤—ñ–∫",
    titleEn: "Numbers and Age",
    content: `
# Numbers and Age

Learn how to count in English and talk about your age.

## Numbers 0-20:
- **0** - zero (–Ω—É–ª—å)
- **1** - one (–æ–¥–∏–Ω)
- **2** - two (–¥–≤–∞)
- **3** - three (—Ç—Ä–∏)
- **4** - four (—á–æ—Ç–∏—Ä–∏)
- **5** - five (–ø'—è—Ç—å)
- **6** - six (—à—ñ—Å—Ç—å)
- **7** - seven (—Å—ñ–º)
- **8** - eight (–≤—ñ—Å—ñ–º)
- **9** - nine (–¥–µ–≤'—è—Ç—å)
- **10** - ten (–¥–µ—Å—è—Ç—å)
- **11** - eleven (–æ–¥–∏–Ω–∞–¥—Ü—è—Ç—å)
- **12** - twelve (–¥–≤–∞–Ω–∞–¥—Ü—è—Ç—å)
- **13** - thirteen (—Ç—Ä–∏–Ω–∞–¥—Ü—è—Ç—å)
- **14** - fourteen (—á–æ—Ç–∏—Ä–Ω–∞–¥—Ü—è—Ç—å)
- **15** - fifteen (–ø'—è—Ç–Ω–∞–¥—Ü—è—Ç—å)
- **16** - sixteen (—à—ñ—Å—Ç–Ω–∞–¥—Ü—è—Ç—å)
- **17** - seventeen (—Å—ñ–º–Ω–∞–¥—Ü—è—Ç—å)
- **18** - eighteen (–≤—ñ—Å—ñ–º–Ω–∞–¥—Ü—è—Ç—å)
- **19** - nineteen (–¥–µ–≤'—è—Ç–Ω–∞–¥—Ü—è—Ç—å)
- **20** - twenty (–¥–≤–∞–¥—Ü—è—Ç—å)

## Talking About Age:
- **How old are you?** - –°–∫—ñ–ª—å–∫–∏ —Ç–æ–±—ñ —Ä–æ–∫—ñ–≤?
- **I am ... years old** - –ú–µ–Ω—ñ ... —Ä–æ–∫—ñ–≤
- **He is 25 years old** - –ô–æ–º—É 25 —Ä–æ–∫—ñ–≤
- **She is 30** - –á–π 30

## Example Sentences:
- I am twenty years old. (–ú–µ–Ω—ñ –¥–≤–∞–¥—Ü—è—Ç—å —Ä–æ–∫—ñ–≤)
- My brother is fifteen. (–ú–æ—î–º—É –±—Ä–∞—Ç—É –ø'—è—Ç–Ω–∞–¥—Ü—è—Ç—å)
- How old is your sister? (–°–∫—ñ–ª—å–∫–∏ —Ä–æ–∫—ñ–≤ —Ç–≤–æ—ó–π —Å–µ—Å—Ç—Ä—ñ?)
- She is twelve years old. (–á–π –¥–≤–∞–Ω–∞–¥—Ü—è—Ç—å —Ä–æ–∫—ñ–≤)

## Practice:
Remember, we say "I am X years old" or just "I am X" - both are correct!
    `,
    vocabulary: [
      { en: "One", ua: "–û–¥–∏–Ω", example: "I have one brother." },
      { en: "Two", ua: "–î–≤–∞", example: "I have two sisters." },
      { en: "Five", ua: "–ü'—è—Ç—å", example: "I am five years old." },
      { en: "Ten", ua: "–î–µ—Å—è—Ç—å", example: "I have ten fingers." },
      {
        en: "Fifteen",
        ua: "–ü'—è—Ç–Ω–∞–¥—Ü—è—Ç—å",
        example: "She is fifteen years old.",
      },
      { en: "Twenty", ua: "–î–≤–∞–¥—Ü—è—Ç—å", example: "He is twenty." },
      { en: "How old", ua: "–°–∫—ñ–ª—å–∫–∏ —Ä–æ–∫—ñ–≤", example: "How old are you?" },
      { en: "Years old", ua: "–†–æ–∫—ñ–≤", example: "I am 18 years old." },
    ],
    quiz: [
      {
        type: "multiple-choice",
        question: '–Ø–∫ —Å–∫–∞–∑–∞—Ç–∏ "5" –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é?',
        options: ["Five", "Four", "Six", "Seven"],
        correct: 0,
      },
      {
        type: "translation",
        question: '–ü–µ—Ä–µ–∫–ª–∞–¥—ñ—Ç—å: "–ú–µ–Ω—ñ 20 —Ä–æ–∫—ñ–≤"',
        options: [
          "I am 20 years old",
          "I have 20 years",
          "My age is 20",
          "I am 20 age",
        ],
        correct: 0,
      },
      {
        type: "multiple-choice",
        question: '–©–æ –æ–∑–Ω–∞—á–∞—î "How old are you?"',
        options: [
          "–Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?",
          "–°–∫—ñ–ª—å–∫–∏ —Ç–æ–±—ñ —Ä–æ–∫—ñ–≤?",
          "–ó–≤—ñ–¥–∫–∏ —Ç–∏?",
          "–Ø–∫ —Å–ø—Ä–∞–≤–∏?",
        ],
        correct: 1,
      },
      {
        type: "fill-blank",
        question: '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å: "I am ___ years old" (15)',
        correctAnswer: "fifteen",
      },
      {
        type: "multiple-choice",
        question: '–Ø–∫–µ —á–∏—Å–ª–æ –π–¥–µ –ø—ñ—Å–ª—è "nine"?',
        options: ["Eight", "Ten", "Eleven", "Twelve"],
        correct: 1,
      },
      {
        type: "translation",
        question: '–Ø–∫ –∑–∞–ø–∏—Ç–∞—Ç–∏ "–°–∫—ñ–ª—å–∫–∏ —Ç–æ–±—ñ —Ä–æ–∫—ñ–≤?" –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é?',
        options: [
          "How old are you?",
          "How are you?",
          "What is your age?",
          "How many years?",
        ],
        correct: 0,
      },
      {
        type: "fill-blank",
        question: '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å: "She is ___ years old" (12)',
        correctAnswer: "twelve",
      },
      {
        type: "multiple-choice",
        question: '–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ: "I am 20 ___"',
        options: ["years", "year old", "years old", "year"],
        correct: 2,
      },
    ],
    order: 2,
  },
];

async function seedDatabase() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log("‚úÖ Connected to MongoDB");

    // Clear existing A1 lessons
    await Lesson.deleteMany({ level: "A1" });
    console.log("üóëÔ∏è  Cleared existing A1 lessons");

    // Insert sample lessons
    await Lesson.insertMany(sampleLessons);
    console.log("‚úÖ Added 2 A1 lessons");

    console.log("üéâ Database seeded successfully!");
    process.exit(0);
  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
    process.exit(1);
  }
}

seedDatabase();
